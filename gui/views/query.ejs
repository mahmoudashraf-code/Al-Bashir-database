<nav>
    <button id="button">Run</button>
</nav>
<section>
    <div id="inputTextEditor"></div>
    <div id="outputTextEditor"></div>
</section>
<script src="./vs/loader.js"></script>
<script>
    require.config({ paths: { 'vs': './vs' } });
    require(['./vs/editor/editor.main'], () => {
        var editor = monaco.editor.create(inputTextEditor, {
            value: "",
            language: 'json',
            automaticLayout: true
        });
        var outputEditor = monaco.editor.create(outputTextEditor, {
            value: "",
            language: 'json',
            automaticLayout: true
        });
        button.addEventListener("click", () => {
            let data = JSON.parse(editor.getValue());
            let url = "/api/query";
            let body = {
                method: data.type,
                headers: {
                    'Content-Type': 'application/json'
                },
            }
            if (data.type == "get" || data.type == "GET") {
                url += `/${JSON.stringify(data)}`;
            } else {
                body.body = JSON.stringify(data)
            }
            fetch(url, body).then(res => {
                return res.text()
            }).then(json => {
                outputEditor.setValue(json);
                outputEditor.getAction('editor.action.formatDocument').run();
            }).catch(err => {
                console.log(err)
            })
        })
        monaco.languages.registerCompletionItemProvider("json", {
            provideCompletionItems: () => {
                return {
                    suggestions: [
                        {
                            label: "get",
                            insertText: [
                                "{",
                                '\t"type" : "${1:get}",',
                                '\t"database" : "${2:database}",',
                                '\t"table" : ["${3:table}"],',
                                '\t"join" : ["${4:key1}"]',
                                "}"
                            ].join("\n"),
                            documentation: "",
                            command: { id: "editor.action.formatDocument", title: "editor.action.formatDocument" },
                            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,
                            kind: monaco.languages.CompletionItemKind.Snippet,
                        }
                    ]
                };
            }
        });
    });
</script>